name: Node.js CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{secrets.REPO_NAME}}
          IMAGE_TAG: test
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY

      - name: SSH and run commands
        uses: appleboy/ssh-action@v1.0.3
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.REPO_NAME }}

        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: 22
          script: |
            # Identify the existing Docker container and stop/remove it
            sudo docker stop test-rasibery || true
            sudo docker rm test-rasibery || true

            # Pull the latest Docker image from the ECR registry
            sudo docker pull 569496106099.dkr.ecr.us-east-1.amazonaws.com/test-rasibery

            # Run the Docker container on Raspberry Pi
             sudo docker run -d --name your-node-app -p 4000:4000 569496106099.dkr.ecr.us-east-1.amazonaws.com/test-rasibery

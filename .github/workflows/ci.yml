name: Node.js CI/CD

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{secrets.REPO_NAME}}
          IMAGE_TAG: test
        run: |
          docker build . -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG


      # - name: SSH and run commands
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     password: ${{ secrets.PASSWORD }}
      #     port: 22
      #     script: |
      #       # Identify the existing Node.js process and kill it
      #       existing_pid=$(lsof -i :4000 -t)
      #       if [ -n "$existing_pid" ]; then
      #         echo "Stopping existing Node.js server with PID $existing_pid"
      #         kill -9 "$existing_pid"
      #       fi

      #       cd ~/my-node-app && git stash && rm -rf node_modules && rm -rf package-lock.json && git pull origin main && npm install && node index.js
